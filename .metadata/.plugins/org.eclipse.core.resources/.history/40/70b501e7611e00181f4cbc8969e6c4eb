package Dota2Parser.Dota2Parser;

import skadistats.clarity.model.FieldPath;
import skadistats.clarity.model.Entity;

public class Hero extends Unit
{
    public final int itemCount = 17; // Clarity analyzer has 17 spots for items
    
    public Hero(Entity e)
    {
    	super(e);
    }
    
    public boolean isPosition(FieldPath path)
    {
        return (path.equals(x) || path.equals(y) || path.equals(z));
    }
    
    public boolean isHealth(FieldPath path)
    {
        return path.equals(health);
    }
    
    public boolean isLevel(FieldPath path)
    {
        return path.equals(level);
    }

    public boolean isMana(FieldPath path)
    {
        return path.equals(mana);
    }
    
    public boolean isStrength(FieldPath path)
    {
        return path.equals(strength);
    }
    
    public boolean isIntellect(FieldPath path)
    {
        return path.equals(intellect);
    }

    public boolean isAgility(FieldPath path)
    {
        return path.equals(agility);
    }
    
    public boolean isMaxHealth(FieldPath path)
    {
        return path.equals(maxHealth);
    }
    
    public boolean isManaRegen(FieldPath path)
    {
        return path.equals(manaRegen);
    }
    
    public boolean isHealthRegen(FieldPath path)
    {
        return path.equals(healthRegen);
    }
    
    public boolean isMovementSpeed(FieldPath path)
    {
        return path.equals(movementSpeed);
    }
    
    public boolean isDamageMin(FieldPath path)
    {
        return path.equals(damageMin);
    }
    
    public boolean isDamageMax(FieldPath path)
    {
        return path.equals(damageMax);
    }
    
    public boolean isItems(FieldPath path)
    {
        for (int i = 0; i < itemCount; i++)
        {
            if (path.equals(items[i]))
            {
                return true;
            }
        }
        return false;
    }
}
